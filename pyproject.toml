[project]
name = "opendataeditor"
dynamic = ["version"]
requires-python = ">=3.10"
dependencies = [
    # Core
    "fastapi==0.103.1",
    "frictionless==5.16.0",
    "gitignore-parser==0.1.6",
    "openai==0.28.0",
    "pydantic==2.3.0",
    "python-multipart==0.0.6",
    "sqlalchemy==2.0.20",
    "tinydb==4.8.0",
    "typer==0.9.0",
    "typing_extensions==4.8.0",
    "uvicorn==0.23.2",
    # Articles
    "jinja2==3.1.2",
    "marko==2.0.0",
    # Scripts
    "pandas==2.1.1",
    # Excel
    "openpyxl==3.1.2",
    "xlrd==2.0.1",
    "xlwt==1.3.0",
    # JSON
    "ijson==3.2.3",
    "jsonlines==4.0.0",
    # Parquet
    "fastparquet==2023.8.0",
    # CKAN
    "frictionless-ckan-mapper==1.0.9",
    # Github
    "pygithub==1.59.1",
    # Zenodo
    "pyzenodo3==1.0.2",
]

[tool.setuptools]
packages=["server"]

[tool.hatch.version]
path = "package.json"
pattern = '"version": "(?P<version>.*)"'

[tool.hatch.envs.default]
python = "3.10"
dependencies = [
    "ruff",
    "httpx",
    "pytest",
    "neovim",
    "fsspec",
    "pyright==1.1.317",
    "ipython",
    "watchfiles",
    "pytest-vcr",
    "pytest-mock",
    "pytest-only",
    "pytest-dotenv",
    "pytest-timeout",
    "pytest-lazy-fixture",
]

[tool.hatch.envs.default.scripts]
build = [
  "python -m build",
]
check = [
  "pyright server",
]
format = [
  "ruff format server",
]
lint = [
  "ruff check server",
]
start = [
  "watchfiles 'python -m server {args:tmp/project}' server",
]
test = [
  "hatch run lint",
  "hatch run check",
  "hatch run pytest",
]

[tool.ruff]
line-length = 90

[tool.ruff.lint]
ignore = ["E501", "E731"]
select = ["I"]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401", "F403"]

[tool.pytest.ini_options]
testpaths = ["server"]
env_files = [".env"]
markers = ["ci: integrational tests (select with '--ci')"]

[tool.pyright]
strict = ["server"]
include = ["server"]
ignore = ["**/__init__.py", "**/__spec__/**/*", "**/conftest.py"]
