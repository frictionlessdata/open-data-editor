# Schema

schema:
  - Schema
  - https://specs.frictionlessdata.io/table-schema/
  - Table Schema is a specification for providing a schema for tabular data. It includes the expected data type for each value in a column.

schema/title:
  - Title
  - https://specs.frictionlessdata.io/table-schema/
  - A human-readable title.

schema/description:
  - Description
  - https://specs.frictionlessdata.io/table-schema/
  - A description of the schema. The description MUST be markdown formatted â€“ this also allows for simple plain text as plain text is itself valid markdown.

schema/primaryKey:
  - Primary Key
  - https://specs.frictionlessdata.io/table-schema/#primary-key
  - A primary key is a field or set of fields that uniquely identifies each row in the table.

schema/missingValues:
  - Missing Values
  - https://specs.frictionlessdata.io/table-schema/#missing-values
  - Many datasets arrive with missing data values, either because a value was not collected or it never existed.

# Fields

fields:
  - Fields
  - https://specs.frictionlessdata.io/table-schema/#descriptor
  - Fields MUST be an array where each entry in the array is a field descriptor (as defined below).

fields/name:
  - Name
  - https://specs.frictionlessdata.io/table-schema/#name
  - The field descriptor MUST contain a name property. This property SHOULD correspond to the name of field/column in the data file (if it has a name)

fields/type:
  - Type
  - https://specs.frictionlessdata.io/table-schema/#types-and-formats
  - String indicating the type of this field.

fields/format:
  - Format
  - https://specs.frictionlessdata.io/table-schema/#types-and-formats
  - String indicating the format of this field.

fields/missingValues:
  - Missing Values
  - https://specs.frictionlessdata.io/table-schema/#missing-values
  - Specifies which string values should be treated as null values.

fields/rdfType:
  - RDF Type
  - https://specs.frictionlessdata.io/table-schema/#rich-types
  - Indicates whether the field is of RDF type.

fields/title:
  - Title
  - https://specs.frictionlessdata.io/table-schema/#title
  - A human-readable title.

fields/bareNumber:
  - Bare Number
  - https://specs.frictionlessdata.io/table-schema/#types-and-formats
  - A boolean field with a default of true.

fields/description:
  - Description
  - https://specs.frictionlessdata.io/table-schema/#description
  - A description of the field.

fields/groupChar:
  - Group Char
  - https://specs.frictionlessdata.io/table-schema/#types-and-formats
  - A string whose value is used to group digits within the number.

fields/arrayItem:
  - Array Item
  - https://specs.frictionlessdata.io/table-schema/#array
  - A dictionary that specifies the type and other constraints for the data that will be read in this data type field.

fields/trueValues:
  - True Values
  - https://specs.frictionlessdata.io/table-schema/#boolean
  - Specifies which string values should be treated as true values. 

fields/falseValues:
  - False Values
  - https://specs.frictionlessdata.io/table-schema/#boolean
  - Specifies which string values should be treated as false values.

fields/floatNumber:
  - Float Number
  - https://specs.frictionlessdata.io/table-schema/#number
  - It specifies that the value is a float number.

fields/decimalChar:
  - Float Number
  - https://specs.frictionlessdata.io/table-schema/#number
  - It specifies the char to be used as decimal character. The default value is "."

fields/minimum:
  - Float Minimum
  - https://specs.frictionlessdata.io/table-schema/#constraints
  - It specifies a minimum value for a field.

fields/maximum:
  - Float Maximum
  - https://specs.frictionlessdata.io/table-schema/#constraints
  - It specifies a maximum value for a field.

fields/enum:
  - Enum
  - https://specs.frictionlessdata.io/table-schema/#constraints
  - The value of the field must exactly match a value in the enum array.

fields/required:
  - Required
  - https://specs.frictionlessdata.io/table-schema/#constraints
  - Indicates whether this field cannot be null.

fields/unique:
  - Unique
  - https://specs.frictionlessdata.io/table-schema/#constraints
  - Specifies all the values for that field MUST be unique.

fields/minLength:
  - Min Length
  - https://specs.frictionlessdata.io/table-schema/#constraints
  - An integer that specifies the minimum length of a value.

fields/maxLength:
  - Max Length
  - https://specs.frictionlessdata.io/table-schema/#constraints
  - An integer that specifies the maximum length of a value.

fields/pattern:
  - Max Length
  - https://specs.frictionlessdata.io/table-schema/#constraints
  - A regular expression that can be used to test field values.

# Foreign Keys

foreignKeys:
  - Foreign Keys
  - https://specs.frictionlessdata.io/table-schema/#foreign-keys
  - A foreign key is a reference where values in a field (or fields) on the table described by this Table Schema connect to values a field (or fields) on this or a separate table
